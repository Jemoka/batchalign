name: Build and Release for Anaconda

on:
  push:
    branches:
      - master
      - feat/windows

jobs:
  conda_build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Check out repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Remove actions folder (POSIX) # this is required for Conda to not freak out at the yml file inside
        if: ${{ matrix.os != 'windows-latest' }} 
        run: rm -rf .github
      - name: Remove actions folder (Win) # this is required for Conda to not freak out at the yml file inside
        if: ${{ matrix.os == 'windows-latest' }} 
        run: Remove-Item ".github\*" -Force -Recurse
      - name: Install Conda
        uses: conda-incubator/setup-miniconda@v2
        with:
          auto-activate-base: true
          miniforge-variant: Mambaforge
          miniforge-version: latest
          use-mamba: true
          activate-environment: ""
      - name: Forge!
        run: conda config --add channels conda-forge
      # - name: Install Conda build tools
        # run: conda install -y conda-build conda-verify
      - name: Brotli dependency
        if: ${{ matrix.os == 'windows-latest' }} 
        run: mamba install -c anaconda urllib3
      - name: Install mamba and boa (dependency resolver)
        run: mamba install -y boa
      - name: Install mingw (Win)
        if: ${{ matrix.os == 'windows-latest' }} 
        run: mamba install -y m2w64-toolchain m2w64-gcc
      - name: Build batchalign
        run: conda mambabuild . -c pytorch -c conda-forge --no-test
      - name: Upload Build Artifact (Linux)
        if: ${{ matrix.os == 'ubuntu-latest' }} 
        uses: actions/upload-artifact@v3
        with:
          name: Linux batchalign
          path: /usr/share/miniconda3/conda-bld/linux-64/*.tar.bz2
      - name: Upload Build Artifact (macOS)
        if: ${{ matrix.os == 'macos-latest' }} 
        uses: actions/upload-artifact@v3
        with:
          name: macOS batchalign
          path: /Users/runner/miniconda3/conda-bld/osx-64/*.tar.bz2
      - name: Upload Build Artifact (Windows)
        if: ${{ matrix.os == 'windows-latest' }} 
        uses: actions/upload-artifact@v3
        with:
          name: Windows batchalign
          path: C:\Miniconda3\conda-bld\win-64\*.tar.bz2
      - name: Install anaconda client
        run: mamba install anaconda-client urllib3=1.26.16 defusedxml=0.7.0 -c conda-forge
      - name: Authenticate (Linux)
        if: ${{ matrix.os == 'ubuntu-latest' }} 
        env:
            ANACONDA_USERNAME: ${{ secrets.ANACONDA_USERNAME }}
            ANACONDA_PASSPHRASE: ${{ secrets.ANACONDA_PASSPHRASE }}
        run: conda run anaconda login --username "$ANACONDA_USERNAME" --password "$ANACONDA_PASSPHRASE"
      - name: Authenticate (macOS)
        if: ${{ matrix.os == 'macos-latest' }} 
        env:
            ANACONDA_USERNAME: ${{ secrets.ANACONDA_USERNAME }}
            ANACONDA_PASSPHRASE: ${{ secrets.ANACONDA_PASSPHRASE }}
        run: conda run anaconda login --username "$ANACONDA_USERNAME" --password "$ANACONDA_PASSPHRASE"
      - name: Authenticate (Windows)
        if: ${{ matrix.os == 'windows-latest' }} 
        run: conda run anaconda login --username "${{ secrets.ANACONDA_USERNAME }}" --password "${{ secrets.ANACONDA_PASSPHRASE }}"
      - name: Publish build (macOS)
        if: ${{ matrix.os == 'macos-latest' }} 
        run: conda run anaconda upload -u talkbank /Users/runner/miniconda3/conda-bld/osx-64/*.tar.bz2
      - name: Publish build (Windows)
        if: ${{ matrix.os == 'windows-latest' }} 
        run: conda run anaconda upload -u talkbank C:\Miniconda3\conda-bld\win-64\*.tar.bz2
      - name: Publish build (Linux)
        if: ${{ matrix.os == 'ubuntu-latest' }} 
        run: conda run anaconda upload -u talkbank /usr/share/miniconda3/conda-bld/linux-64/*.tar.bz2
